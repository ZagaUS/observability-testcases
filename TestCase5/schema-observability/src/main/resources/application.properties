# Quarkus HTTP server configuration
quarkus.http.port=8083
quarkus.http.host=0.0.0.0

# MongoDB configuration
%dev.quarkus.mongodb.connection-string=${MONGODB_URL:mongodb+srv://devteam:Zagateam2023*@applicationcluster.tvbngn1.mongodb.net/test}

# Kafka producer configuration
%dev.mp.messaging.outgoing.logs-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.logs-out.topic=${PRODUCT_TOPIC:product}
%dev.mp.messaging.outgoing.logs-out.bootstrap.servers=${PRODUCT_BOOTSTRAP_URL:observai-persistent-kafka-bootstrap.kafka-space.svc.cluster.local:9092}
%dev.mp.messaging.outgoing.logs-out.value.serializer=com.zaga.kafka.KafkaSerializer
%dev.mp.messaging.outgoing.logs-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka consumer configuration
%dev.mp.messaging.incoming.logs-in.connector=smallrye-kafka
%dev.mp.messaging.incoming.logs-in.topic=${PRODUCT_TOPIC:product}
%dev.mp.messaging.incoming.logs-in.bootstrap.servers=${PRODUCT_BOOTSTRAP_URL:observai-persistent-kafka-bootstrap.kafka-space.svc.cluster.local:9092}
%dev.mp.messaging.incoming.logs-in.value.deserializer=com.zaga.kafka.KafkaDeserializer
%dev.mp.messaging.incoming.logs-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%dev.mp.messaging.incoming.logs-in.auto.offset.reset=latest

# Quarkus CORS headers
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=Content-Type


#PROD CONFIG
# MongoDB configuration
%prod.quarkus.mongodb.connection-string=${MONGODB_URL:mongodb://root:pass123@observai-mongodb-community-0.observai-mongodb-community-svc.mongodb-space.svc.cluster.local:27017,observai-mongodb-community-1.observai-mongodb-community-svc.mongodb-space.svc.cluster.local:27017,observai-mongodb-community-2.observai-mongodb-community-svc.mongodb-space.svc.cluster.local:27017/admin?ssl=false}

# Kafka producer configuration
%prod.mp.messaging.outgoing.logs-out.connector=smallrye-kafka
%prod.mp.messaging.outgoing.logs-out.topic=${PRODUCT_TOPIC:product}
%prod.mp.messaging.outgoing.logs-out.bootstrap.servers=${PRODUCT_BOOTSTRAP_URL:observai-persistent-kafka-bootstrap.kafka-space.svc.cluster.local:9092}
%prod.mp.messaging.outgoing.logs-out.value.serializer=com.zaga.kafka.KafkaSerializer
%prod.mp.messaging.outgoing.logs-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka consumer configuration
%prod.mp.messaging.incoming.logs-in.connector=smallrye-kafka
%prod.mp.messaging.incoming.logs-in.topic=${PRODUCT_TOPIC:product}
%prod.mp.messaging.incoming.logs-in.bootstrap.servers=${PRODUCT_BOOTSTRAP_URL:observai-persistent-kafka-bootstrap.kafka-space.svc.cluster.local:9092}
%prod.mp.messaging.incoming.logs-in.value.deserializer=com.zaga.kafka.KafkaDeserializer
%prod.mp.messaging.incoming.logs-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%prod.mp.messaging.incoming.logs-in.auto.offset.reset=latest





